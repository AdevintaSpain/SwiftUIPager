# This workflow creates a new release from a tag, generates an xcframework,
# attaches it as an asset and deploys to CocoaPods

name: Create Release

on:
  push: 
    tags:
      - '*'
jobs:
  create_xcframework:
    name: Create XCFramework
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create XCFramework
        uses: unsignedapps/swift-create-xcframework@v1
    
  create_release:  
    name: Create Release and Upload artfifacts
    needs: create_xcframework
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./release_description.md
          draft: false
          prerelease: true

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: SwiftUIPager.zip
          path: ./
      
      - run: mv SwiftUIPager.zip SwiftUIPager.xcframework.zip
      
      - name: Quick check
        run: |
          echo $(pwd)
          file=SwiftUIPager.xcframework.zip
          if [[ -d $file ]]; then
            echo "$file is a directory"
          elif [[ -f $file ]]; then
            echo "$file is a file"
          else
              echo "$file is not valid"
          fi

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./SwiftUIPager.xcframework.zip
          asset_name: SwiftUIPager.xcframework.zip
          asset_content_type: application/zip
  
#   cocoapods:
#     name: Deploy to Cocoapods
#     runs-on: macOS-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Install Cocoapods
#       run: gem install cocoapods 

#     - name: Deploy to Cocoapods
#       run: |
#         set -eo pipefail
#         export LIB_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
#         pod lib lint --allow-warnings
#         pod trunk push --allow-warnings
#       env:
#         COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
